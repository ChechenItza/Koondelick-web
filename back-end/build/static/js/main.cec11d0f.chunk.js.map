{"version":3,"sources":["constants/colors.js","components/styles/NavigationElements.js","components/DateNavigation.js","components/NavigationBar.js","components/WeekPanel.js","components/Calendar.js","pages/CalendarPage.js","components/JournalBar.js","components/Editor.js","utils/linkGenerator.js","services/entries.js","pages/JournalPage.js","App.js","index.js"],"names":["module","exports","borderColor","btnColor","primaryColor","primaryHoverColor","gradientColor","gradient2Color","inactiveColor","navbarElemColor","bgColor","editorBgColor","shadow","SideWrapper","styled","div","NavigationButton","span","attrs","props","className","colors","NavigationSpacer","NavigationBarStyled","DateNavigatonStyled","DateWrapper","Month","Year","DateNavigaton","date","changeDate","changeMonth","e","operation","preventDefault","newDate","Date","getFullYear","getMonth","getDate","onClick","toLocaleString","month","NavigationBar","Panel","DayOfWeek","last","WeekPanel","CalendarStyled","DayCell","EmptyCell","Calendar","goToJournalPage","calendar","firstDay","getDay","i","push","key","length","daysInMonth","day","handleDayClick","now","selected","isToday","generateCalendar","CalendarPage","Day","JournalBar","saveEntry","history","useHistory","goBack","EditorWrapper","modules","syntax","toolbar","formats","Editor","text","theme","ref","get","a","url","linkGenerator","axios","response","data","entry","undefined","update","put","post","JournalPage","useState","entryIsEmpty","setEntryStatus","useRef","useEffect","entryService","loadedEntry","console","log","current","getEditor","setContents","getContents","savedEntry","saveNewEntry","AppStyled","App","setDate","match","useRouteMatch","journalDate","location","state","dateRaw","params","split","parseInt","isUpdatable","toLocaleDateString","exact","path","pathname","fromCalendar","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cec11d0f.chunk.js","sourcesContent":["module.exports = {\n  borderColor: '#D0D0D0',\n  btnColor: '#ffffff',\n  primaryColor: '#e53935',\n  primaryHoverColor: '#ff6f60',\n  gradientColor: '#ff6f60',\n  gradient2Color: '#E1E2E1',\n  inactiveColor: '#E1E2E1',\n  navbarElemColor: 'rgba(255, 255, 255, 1)',\n  bgColor: '#EEEEEE',\n  editorBgColor: '#ffffff',\n  shadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n}","import styled from 'styled-components'\nimport colors from '../../constants/colors'\n\nexport const SideWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const NavigationButton = styled.span.attrs(props => ({ \n  className: 'material-icons'\n}))`\n  border-radius: 25px;\n  padding: 0.6rem;\n  color: ${colors.navbarElemColor};\n\n  margin: 0.3rem;\n\n  -webkit-user-select: none; /* Safari */\n  -ms-user-select: none; /* IE 10+ and Edge */\n  user-select: none; /* Standard syntax */\n\n  &:hover {\n    background-color: ${colors.primaryHoverColor};\n    cursor: pointer;\n  }\n`\n\nexport const NavigationSpacer = styled(NavigationButton)`\n  visibility: hidden;\n`\n\nexport const NavigationBarStyled = styled.div`\n  background-color: ${colors.primaryColor};\n  height: 5rem;\n\n  border-radius: 15px 15px 0 0;\n\n  flex-shrink: 0;\n\n  padding: 0 0.8em;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  box-shadow: ${colors.shadow};\n`","import React from 'react'\nimport styled from 'styled-components'\n\nimport { NavigationButton } from './styles/NavigationElements' \nimport colors from '../constants/colors'\n\nconst DateNavigatonStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  margin: 0 auto;\n`\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: baseline;\n  margin: 0 auto;\n\n  min-width: 15rem;\n`\n\nconst Month = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.5rem;\n`\n\nconst Year = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1rem;\n`\n\nconst DateNavigaton =  ({ date, changeDate }) => {\n  const changeMonth = (e, operation) => {\n    e.preventDefault()\n\n    const newDate = new Date(date.getFullYear(), date.getMonth() + operation, date.getDate())\n    \n    changeDate(newDate)\n  }\n\n  return (\n    <DateNavigatonStyled>\n      <NavigationButton onClick={e => changeMonth(e, -1)}>chevron_left</NavigationButton>\n      <DateWrapper>\n        <Month>{date.toLocaleString('default', { month: 'long' })}</Month>\n        <Year>{date.getFullYear()}</Year>\n      </DateWrapper>\n      <NavigationButton onClick={e => changeMonth(e, 1)}>chevron_right</NavigationButton>\n    </DateNavigatonStyled>\n  )\n}\n\nexport default DateNavigaton","import React from 'react'\n\nimport { NavigationButton, NavigationSpacer, NavigationBarStyled, SideWrapper } from './styles/NavigationElements'\nimport DateNavigaton from './DateNavigation' \n\nconst NavigationBar = ({ date, changeDate }) => {\n  return (\n    <NavigationBarStyled>\n      <SideWrapper>\n        <NavigationSpacer>settings</NavigationSpacer>\n      </SideWrapper>\n      <DateNavigaton date={date} changeDate={changeDate}/>\n      <SideWrapper>\n        <NavigationButton>settings</NavigationButton>\n      </SideWrapper>\n    </NavigationBarStyled>\n  )\n}\n\nexport default NavigationBar","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../constants/colors'\n\nconst Panel = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(auto, 1fr));\n  grid-template-rows: 1fr;\n  height: 1.9rem;\n\n  background-color: ${colors.bgColor};\n\n  box-shadow: ${colors.shadow};\n`\n\nconst DayOfWeek = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-top: 1px solid ${colors.borderColor};\n  border-right: ${props => props.last ? '0px' : '1px solid ' + colors.borderColor};\n  flex: 1;\n\n  font-size: 0.9rem;\n  font-weight: bold;\n`\n\nconst WeekPanel = () => (\n  <Panel>\n      <DayOfWeek>Sun</DayOfWeek>\n      <DayOfWeek>Mon</DayOfWeek>\n      <DayOfWeek>Tue</DayOfWeek>\n      <DayOfWeek>Wed</DayOfWeek>\n      <DayOfWeek>Thu</DayOfWeek>\n      <DayOfWeek>Fri</DayOfWeek>\n      <DayOfWeek last>Sat</DayOfWeek>\n  </Panel>\n)\n\nexport default WeekPanel","import React from 'react'\nimport styled from 'styled-components'\n\nimport colors from '../constants/colors'\n\nconst CalendarStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(auto, 1fr));\n  grid-template-rows: repeat(6, minmax(auto, 1fr));\n  flex: 1;\n\n  box-shadow: ${colors.shadow};\n`\n\nconst DayCell = styled.div`\n  padding: 0.7rem;\n  background-color: ${colors.btnColor};\n  border-top: 1px solid ${colors.borderColor};\n  border-right: ${props => props.last ? '0px' : '1px solid ' + colors.borderColor};\n\n  font-size: 0.8rem;\n\n  &:hover {\n    filter: brightness(96%);\n    cursor: pointer;\n  }\n`\n\nconst EmptyCell = styled(DayCell)`\n  background-color: ${colors.bgColor};\n\n  &:hover {\n    filter: brightness(100%);\n    cursor: auto;\n  }\n`\n\nconst Calendar = ({ date, goToJournalPage }) => {\n\n  const handleDayClick = (e, day) => {\n    e.preventDefault()\n    goToJournalPage(day)\n  }\n\n  const isToday = (day) => {\n    const now = new Date()\n    const selected = new Date(date.getFullYear(), date.getMonth(), day)\n\n    return (\n      now.getFullYear() === selected.getFullYear() &&\n      now.getMonth() === selected.getMonth() &&\n      now.getDate() === selected.getDate()\n    )\n\n  }\n\n  const generateCalendar = () => { \n    let calendar = []\n\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    for (let i = 0; i < firstDay; i++)\n      calendar.push(<EmptyCell key={calendar.length}/>)\n\n    const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    for (let day = 1; day <= daysInMonth; day++)\n      calendar.push(\n        <DayCell \n          key={calendar.length}\n          onClick={(e) => { handleDayClick(e, day); }}\n          last={(calendar.length + 1) % 7 === 0}\n        >\n          {isToday(day) ? <u>{day}</u> : day}\n        </DayCell>\n      )\n\n    while (calendar.length < 42)\n      calendar.push(\n        <EmptyCell \n          key={calendar.length}\n          last={(calendar.length + 1) % 7 === 0}\n        />\n      )\n    \n    return calendar\n  }\n\n  return (\n    <CalendarStyled>\n      {generateCalendar()}\n    </CalendarStyled>\n  )\n}\n\nexport default Calendar","import React from 'react'\n\nimport NavigationBar from '../components/NavigationBar'\nimport WeekPanel from '../components/WeekPanel'\nimport Calendar from '../components/Calendar'\n\nconst CalendarPage = ({ date, changeDate, goToJournalPage }) => {\n  return (\n    <>\n    <NavigationBar date={date} changeDate={changeDate}/>\n    <WeekPanel />\n    <Calendar date={date} goToJournalPage={goToJournalPage} />\n    </>\n  )\n}\n\nexport default CalendarPage","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport styled from 'styled-components'\n\nimport { NavigationButton, NavigationSpacer, NavigationBarStyled, SideWrapper } from './styles/NavigationElements'\nimport colors from '../constants/colors'\n\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: baseline;\n  margin: 0 1.8rem;\n\n  min-width: 179px;\n`\n\nconst Day = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.4rem;\n`\n\nconst Month = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.5rem;\n`\n\nconst Year = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1rem;\n`\n\nconst JournalBar = ({ date, saveEntry }) => {\n  let history = useHistory()\n\n  const handleBack = (e) => {\n    e.preventDefault()\n    history.goBack()\n  }\n\n  return (\n    <NavigationBarStyled>\n      <SideWrapper>\n        <NavigationButton onClick={handleBack}>arrow_back</NavigationButton>\n        <NavigationSpacer>settings</NavigationSpacer>\n        <NavigationSpacer>save</NavigationSpacer>\n      </SideWrapper>\n      <DateWrapper>\n        <Day>{date.getDate()}</Day>\n        <Month>{date.toLocaleString('default', { month: 'long' })}</Month>\n        <Year>{date.getFullYear()}</Year>\n      </DateWrapper>\n      <SideWrapper>\n        <NavigationSpacer>arrow_back</NavigationSpacer>\n        <NavigationButton onClick={saveEntry}>save</NavigationButton>\n        <NavigationButton>settings</NavigationButton>\n      </SideWrapper>\n    </NavigationBarStyled>\n  )\n}\n\nexport default JournalBar","import React, { useState, useEffect, useRef } from 'react'\nimport ReactQuill, { Quill } from 'react-quill';\nimport styled from 'styled-components'\n\nimport colors from '../constants/colors'\nimport 'react-quill/dist/quill.snow.css'\n\nconst EditorWrapper = styled.div`\n  font-size: 1rem;\n  flex-grow: 1;\n\n  overflow: auto;\n`\n\nconst modules = {\n  syntax: true,\n  toolbar: [\n    [{ 'header': [1, 2, 3, false] }],\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image'],\n    ['code-block'],\n    ['clean']\n  ],\n}\n\nconst formats = [\n  'header',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image',\n  'code-block'\n]\n\nconst Editor = ({ text }) => {\n  return (\n    <ReactQuill theme=\"snow\" ref={text} modules={modules} formats={formats}>\n      <EditorWrapper/>\n    </ReactQuill>\n  )\n}\n\nexport default Editor","const genEntryLink = date => {\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n}\n\nexport default { genEntryLink }","import axios from 'axios'\n\nimport linkGenerator from '../utils/linkGenerator'\n\nconst baseUrl = '/entries'\n\nconst get = async (date) => {\n  const url = `${baseUrl}/${linkGenerator.genEntryLink(date)}`\n  const response = await axios.get(url)\n  return response.data ? response.data.entry : undefined\n}\n\nconst update = async (date, entry) => {\n  const url = `${baseUrl}/${linkGenerator.genEntryLink(date)}`\n  const response = await axios.put(url, { entry })\n  return response.data.entry\n}\n\nconst post = async (date, entry) => {\n  const url = `${baseUrl}/${linkGenerator.genEntryLink(date)}`\n  const response = await axios.post(url, { entry })\n  return response.data.entry\n}\n\nexport default { get, update, post }","import React, { useState, useEffect, useRef } from 'react'\n\nimport JournalBar from '../components/JournalBar'\nimport Editor from '../components/Editor'\n\nimport entryService from '../services/entries'\n\nconst JournalPage = ({ date }) => {\n  const [entry, setEntry] = useState('')\n  const [entryIsEmpty, setEntryStatus] = useState(false)\n\n  const text = useRef() \n\n  useEffect(() => {\n    (async () => {\n      try {\n        const loadedEntry = await entryService.get(date)\n        console.log(loadedEntry)\n        setEntryStatus(loadedEntry === undefined)\n        if (loadedEntry !== undefined)\n          text.current.getEditor().setContents(loadedEntry)\n      } catch(exception) {\n        //console.error(exception.message)\n      }\n    })()\n  }, [date])\n\n  const updateEntry = (newEntry) => {\n    setEntry(newEntry)\n  }\n\n  const saveEntry = async () => {\n    console.log(`text ${text.current.getEditor().getContents()}`)\n    try {\n      const savedEntry = await entryService.update(date, text.current.getEditor().getContents())\n      console.log(savedEntry)\n    } catch(exception) {\n      //console.error(exception.message)\n    }\n  }\n\n  const saveNewEntry = async () => {\n    console.log('or here?')\n    try {\n      const savedEntry = await entryService.post(date, text.current.getEditor().getContents())\n      console.log(savedEntry)\n    } catch(exception) {\n      //console.error(exception.message)\n    }\n  }\n\n  return (\n    <>\n    <JournalBar date={date} saveEntry={entryIsEmpty ? saveNewEntry : saveEntry}/>\n    <Editor text={text}/>\n    </>\n  )\n}\n\nexport default JournalPage","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  Switch, Route, useHistory, useRouteMatch\n} from 'react-router-dom'\n\nimport CalendarPage from './pages/CalendarPage'\nimport JournalPage from './pages/JournalPage' \n\nimport linkGenerator from './utils/linkGenerator'\n\nconst AppStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`\n\nconst App = () => {\n  const [date, setDate] = useState(new Date())\n\n  const history = useHistory()\n  const goToJournalPage = (day) => {\n    const newDate = new Date(date.getFullYear(), date.getMonth(), day)\n    changeDate(newDate)\n\n    const location = {\n      pathname: linkGenerator.genEntryLink(newDate),\n      state: { fromCalendar: true }\n    }\n    history.push(location)\n  }\n\n  const match = useRouteMatch('/:date')\n  let journalDate = date\n  if (match && !history.location.state) {\n    const dateRaw = match.params.date.split('-')\n    journalDate = new Date(\n      parseInt(dateRaw[0]),\n      parseInt(dateRaw[1]) - 1,\n      parseInt(dateRaw[2])\n    )\n  }\n\n  const isUpdatable = journalDate !== date\n  useEffect(() => {\n    console.log(`UPDATED ${date.toLocaleDateString()} with ${journalDate.toLocaleDateString()}`)\n    setDate(journalDate)\n  }, [isUpdatable])\n\n  const changeDate = (newDate) => {\n    setDate(newDate)\n  }\n\n  return (\n    <AppStyled>\n      <Switch>\n        <Route exact={true} path=\"/\">\n          <CalendarPage \n            date={date} \n            changeDate={changeDate}\n            goToJournalPage={goToJournalPage} \n          />\n        </Route>\n        <Route path=\"/:date\">\n          <JournalPage date={journalDate}/>\n        </Route>\n      </Switch>\n    </AppStyled>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport colors from './constants/colors'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100vh;\n    width: 100vw;\n  }\n\n  html {\n    font-family: 'Roboto', sans-serif;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  u {\n    text-decoration: none;\n    border-bottom: 0.3rem solid ${colors.primaryHoverColor};\n\n    padding-bottom: 0.1rem;\n  }\n\n  .quill {\n    background-color: ${colors.editorBgColor};\n    flex-grow: 1;\n    \n    display: flex;\n    flex-direction: column;\n\n    box-shadow: ${colors.shadow};\n  }\n\n  .ql-toolbar, .ql-container {\n    border-left: 0px !important;\n    border-right: 0px !important;\n    font-family: Roboto !important;\n  }\n\n\n  #root {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: linear-gradient(to bottom, ${colors.gradientColor} 0%, ${colors.gradientColor} 13%, ${colors.gradientColor} 13%, ${colors.gradient2Color} 13%, ${colors.gradient2Color} 100%);\n    width: 100%;\n    height: 100%;\n    padding: 3% 21%;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}