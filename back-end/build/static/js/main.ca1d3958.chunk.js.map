{"version":3,"sources":["constants/colors.js","components/shared/NavigationElements.js","components/DateNavigation.js","components/CalendarBar.js","components/WeekPanel.js","components/Calendar.js","pages/CalendarPage.js","components/JournalBar.js","components/Editor.js","utils/linkGenerator.js","services/entries.js","pages/JournalPage.js","services/user.js","pages/LoginPage.js","App.js","index.js"],"names":["module","exports","borderColor","btnColor","primaryColor","primaryHoverColor","gradientColor","gradient2Color","inactiveColor","navbarElemColor","bgColor","editorBgColor","shadow","SideWrapper","styled","div","NavigationButton","span","attrs","props","className","colors","NavigationSpacer","NavigationBar","DateNavigatonStyled","DateWrapper","Month","Year","DateNavigaton","date","changeDate","changeMonth","e","operation","preventDefault","newDate","Date","getFullYear","getMonth","getDate","onClick","toLocaleString","month","CalendarBar","logout","Panel","DayOfWeek","last","WeekPanel","CalendarStyled","DayCell","EmptyCell","Calendar","goToJournalPage","calendar","firstDay","getDay","i","push","key","length","daysInMonth","day","handleDayClick","now","selected","isToday","generateCalendar","CalendarPage","Day","JournalBar","saveEntry","history","useHistory","goBack","EditorStyled","modules","syntax","toolbar","formats","Editor","text","theme","ref","get","a","url","linkGenerator","axios","response","data","entry","undefined","post","JournalPage","useRef","useEffect","entryService","loadedEntry","current","getEditor","setContents","console","error","getContents","login","user","LoginForm","SignInText","p","LoginPage","setUser","userService","token","name","alt","src","PageWrapper","LoginWrapper","App","useState","setDate","window","location","reload","match","useRouteMatch","journalDate","state","dateRaw","params","split","parseInt","isUpdatable","pathname","loginPage","exact","path","fromCalendar","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAAA,EAAOC,QAAU,CACfC,YAAa,UACbC,SAAU,UACVC,aAAc,UACdC,kBAAmB,UACnBC,cAAe,UACfC,eAAgB,UAChBC,cAAe,UACfC,gBAAiB,yBACjBC,QAAS,UACTC,cAAe,UACfC,OAAQ,yG,qlCCRH,IAAMC,EAAcC,IAAOC,IAAV,KAOXC,EAAmBF,IAAOG,KAAKC,OAAM,SAAAC,GAAK,MAAK,CAC1DC,UAAW,oBADmBN,CAAH,IAKlBO,IAAOZ,gBASMY,IAAOhB,mBAKlBiB,EAAmBR,YAAOE,EAAPF,CAAH,KAIhBS,EAAgBT,IAAOC,IAAV,IACJM,IAAOjB,aAcbiB,IAAOT,Q,6qBC1CvB,IAAMY,EAAsBV,IAAOC,IAAV,KAQnBU,EAAcX,IAAOC,IAAV,KAUXW,EAAQZ,IAAOG,KAAV,IAEAI,IAAOZ,iBAKZkB,EAAOb,IAAOG,KAAV,IAECI,IAAOZ,iBAyBHmB,EArBQ,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACxBC,EAAc,SAACC,EAAGC,GACtBD,EAAEE,iBAEF,IAAMC,EAAU,IAAIC,KAAKP,EAAKQ,cAAeR,EAAKS,WAAaL,EAAWJ,EAAKU,WAE/ET,EAAWK,IAGb,OACE,kBAACX,EAAD,KACE,kBAACR,EAAD,CAAkBwB,QAAS,SAAAR,GAAC,OAAID,EAAYC,GAAI,KAAhD,gBACA,kBAACP,EAAD,KACE,kBAACC,EAAD,KAAQG,EAAKY,eAAe,UAAW,CAAEC,MAAO,UAChD,kBAACf,EAAD,KAAOE,EAAKQ,gBAEd,kBAACrB,EAAD,CAAkBwB,QAAS,SAAAR,GAAC,OAAID,EAAYC,EAAG,KAA/C,mBC3BSW,EArBK,SAAC,GAAkC,IAAhCd,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,WAAYc,EAAa,EAAbA,OAQvC,OACE,kBAACrB,EAAD,KACE,kBAACV,EAAD,KACE,kBAACS,EAAD,kBAEF,kBAAC,EAAD,CAAeO,KAAMA,EAAMC,WAAYA,IACvC,kBAACjB,EAAD,KACE,kBAACG,EAAD,CAAkBwB,QAbH,SAACR,GACpBA,EAAEE,iBAEFU,MAUI,e,+eChBR,IAAMC,EAAQ/B,IAAOC,IAAV,IAMWM,IAAOX,QAEbW,IAAOT,QAGjBkC,EAAYhC,IAAOG,KAAV,IAKWI,IAAOnB,aACf,SAAAiB,GAAK,OAAIA,EAAM4B,KAAO,MAAQ,aAAe1B,IAAOnB,eAmBvD8C,EAZG,kBAChB,kBAACH,EAAD,KACI,kBAACC,EAAD,YACA,kBAACA,EAAD,YACA,kBAACA,EAAD,YACA,kBAACA,EAAD,YACA,kBAACA,EAAD,YACA,kBAACA,EAAD,YACA,kBAACA,EAAD,CAAWC,MAAI,GAAf,S,wpBC/BN,IAAME,EAAiBnC,IAAOC,IAAV,IAMJM,IAAOT,QAGjBsC,EAAUpC,IAAOC,IAAV,IAESM,IAAOlB,SACHkB,IAAOnB,aACf,SAAAiB,GAAK,OAAIA,EAAM4B,KAAO,MAAQ,aAAe1B,IAAOnB,eAUhEiD,EAAYrC,YAAOoC,EAAPpC,CAAH,IACOO,IAAOX,SAgEd0C,EAxDE,SAAC,GAA+B,IAA7BvB,EAA4B,EAA5BA,KAAMwB,EAAsB,EAAtBA,gBAiDxB,OACE,kBAACJ,EAAD,KA/BuB,WAIvB,IAHA,IAAIK,EAAW,GAETC,EAAW,IAAInB,KAAKP,EAAKQ,cAAeR,EAAKS,WAAY,GAAGkB,SACzDC,EAAI,EAAGA,EAAIF,EAAUE,IAC5BH,EAASI,KAAK,kBAACP,EAAD,CAAWQ,IAAKL,EAASM,UAGzC,IADA,IAAMC,EAAc,IAAIzB,KAAKP,EAAKQ,cAAeR,EAAKS,WAAa,EAAG,GAAGC,UAP5C,WAQpBuB,GACPR,EAASI,KACP,kBAACR,EAAD,CACES,IAAKL,EAASM,OACdpB,QAAS,SAACR,IA7BK,SAACA,EAAG8B,GACzB9B,EAAEE,iBACFmB,EAAgBS,GA2BQC,CAAe/B,EAAG8B,IACpCf,MAAOO,EAASM,OAAS,GAAK,IAAM,GAzB5B,SAACE,GACf,IAAME,EAAM,IAAI5B,KACV6B,EAAW,IAAI7B,KAAKP,EAAKQ,cAAeR,EAAKS,WAAYwB,GAE/D,OACEE,EAAI3B,gBAAkB4B,EAAS5B,eAC/B2B,EAAI1B,aAAe2B,EAAS3B,YAC5B0B,EAAIzB,YAAc0B,EAAS1B,UAoBtB2B,CAAQJ,GAAO,2BAAIA,GAAWA,KAP5BA,EAAM,EAAGA,GAAOD,EAAaC,IAAtC,EAASA,GAWT,KAAOR,EAASM,OAAS,IACvBN,EAASI,KACP,kBAACP,EAAD,CACEQ,IAAKL,EAASM,OACdb,MAAOO,EAASM,OAAS,GAAK,IAAM,KAI1C,OAAON,EAKJa,KCxEQC,EAVM,SAAC,GAAmD,IAAjDvC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,WAAYuB,EAA8B,EAA9BA,gBAAiBT,EAAa,EAAbA,OACzD,OACE,oCACA,kBAAC,EAAD,CAAaf,KAAMA,EAAMC,WAAYA,EAAYc,OAAQA,IACzD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUf,KAAMA,EAAMwB,gBAAiBA,M,yoBCJ3C,IAAM5B,EAAcX,IAAOC,IAAV,KAUXsD,EAAMvD,IAAOG,KAAV,IAEEI,IAAOZ,iBAKZiB,EAAQZ,IAAOG,KAAV,IAEAI,IAAOZ,iBAKZkB,GAAOb,IAAOG,KAAV,IAECI,IAAOZ,iBAiCH6D,GA7BI,SAAC,GAAyB,IAAvBzC,EAAsB,EAAtBA,KAAM0C,EAAgB,EAAhBA,UACtBC,EAAUC,cAOd,OACE,kBAAClD,EAAD,KACE,kBAACV,EAAD,KACE,kBAACG,EAAD,CAAkBwB,QARL,SAACR,GAClBA,EAAEE,iBACFsC,EAAQE,WAMJ,cACA,kBAACpD,EAAD,iBACA,kBAACA,EAAD,cAEF,kBAAC,EAAD,KACE,kBAAC+C,EAAD,KAAMxC,EAAKU,WACX,kBAAC,EAAD,KAAQV,EAAKY,eAAe,UAAW,CAAEC,MAAO,UAChD,kBAAC,GAAD,KAAOb,EAAKQ,gBAEd,kBAACxB,EAAD,KACE,kBAACS,EAAD,mBACA,kBAACN,EAAD,CAAkBwB,QAAS+B,GAA3B,QACA,kBAACvD,EAAD,oB,8JCtDR,IAAM2D,GAAe7D,IAAOC,IAAV,MAOZ6D,GAAU,CACdC,QAAQ,EACRC,QAAS,CACP,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,GAAG,KACvB,CAAC,OAAQ,SAAU,YAAY,SAAU,cACzC,CAAC,CAAC,KAAQ,WAAY,CAAC,KAAQ,UAAW,CAAC,OAAU,MAAO,CAAC,OAAU,OACvE,CAAC,OAAQ,SACT,CAAC,cACD,CAAC,WAICC,GAAU,CACd,SACA,OAAQ,SAAU,YAAa,SAAU,aACzC,OAAQ,SAAU,SAClB,OAAQ,QACR,cAWaC,GARA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACE,kBAAC,KAAD,CAAYC,MAAM,OAAOC,IAAKF,EAAML,QAASA,GAASG,QAASA,IAC7D,kBAACJ,GAAD,Q,oBChCS,GAJM,SAAA9C,GACnB,MAAM,GAAN,OAAUA,EAAKQ,cAAf,YAAgCR,EAAKS,WAAa,EAAlD,YAAuDT,EAAKU,YCiB/C,IAAE6C,IAZR,uCAAG,WAAOvD,GAAP,iBAAAwD,EAAA,6DACJC,EADI,UAFI,WAEJ,YACgBC,GAA2B1D,IAD3C,SAEa2D,KAAMJ,IAAIE,GAFvB,cAEJG,EAFI,yBAGHA,EAASC,KAAOD,EAASC,KAAKC,WAAQC,GAHnC,2CAAH,sDAYaC,KANZ,uCAAG,WAAOhE,EAAM8D,GAAb,iBAAAN,EAAA,6DACLC,EADK,UARG,WAQH,YACeC,GAA2B1D,IAD1C,SAEY2D,KAAMK,KAAKP,EAAK,CAAEK,UAF9B,cAELF,EAFK,yBAGJA,EAASC,KAAKC,OAHV,2CAAH,yDC0BKG,GA/BK,SAAC,GAAc,IAAZjE,EAAW,EAAXA,KACfoD,EAAOc,mBAEbC,qBAAU,WACR,sBAAC,4BAAAX,EAAA,+EAE6BY,GAAab,IAAIvD,GAF9C,YAGuB+D,KADdM,EAFT,SAIKjB,EAAKkB,QAAQC,YAAYC,YAAYH,GAJ1C,gDAMGI,QAAQC,MAAR,MANH,wDAAD,KASC,CAAC1E,IAEJ,IAAM0C,EAAS,uCAAG,sBAAAc,EAAA,+EAERY,GAAaJ,KAAKhE,EAAMoD,EAAKkB,QAAQC,YAAYI,eAFzC,sDAIdF,QAAQC,MAAR,MAJc,wDAAH,qDAQf,OACE,oCACA,kBAAC,GAAD,CAAY1E,KAAMA,EAAM0C,UAAWA,IACnC,kBAAC,GAAD,CAAQU,KAAMA,MCpBH,I,OAAA,CAAEwB,MATN,uCAAG,4BAAApB,EAAA,sEACOG,KAAMJ,IAAN,UAHL,QAGK,YADP,cACNsB,EADM,yBAELA,GAFK,2CAAH,qDASa9D,OAJZ,uCAAG,sBAAAyC,EAAA,sEACAG,KAAMJ,IAAN,UARC,QAQD,YADA,mFAAH,uD,0WCFZ,IAAMuB,GAAY7F,IAAOC,IAAV,KAICM,IAAOT,QAMjBgG,GAAa9F,IAAO+F,EAAV,MA8BDC,GAvBG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEbN,EAAK,uCAAG,WAAOzE,GAAP,eAAAqD,EAAA,6DACZrD,EAAEE,iBADU,SAGO8E,GAAYP,QAHnB,OAGNC,EAHM,OAKZK,EAAQ,CAAEE,MAAOP,EAAKO,MAAOC,KAAMR,EAAKQ,OAL5B,2CAAH,sDAQX,OACE,kBAACP,GAAD,KACE,kBAACC,GAAD,gBACA,yBAAKxF,UAAU,aAAaoB,QAASiE,GACnC,yBAAKrF,UAAU,uBACb,yBAAKA,UAAU,cAAc+F,IAAI,cAAcC,IAAI,iFAErD,uBAAGhG,UAAU,YAAW,sD,+hBCzBhC,IAAMiG,GAAcvG,IAAOC,IAAV,KAM0BM,IAAOf,cAAqBe,IAAOf,cAAsBe,IAAOf,cAAsBe,IAAOd,eAAuBc,IAAOd,gBAGhK+G,GAAexG,IAAOC,IAAV,KAOyBM,IAAOf,cAAqBe,IAAOf,cAAsBe,IAAOf,cAAsBe,IAAOd,eAAuBc,IAAOd,gBA8EvJgH,GA3EH,WAAO,IAAD,EACQC,mBAAS,IAAIpF,MADrB,mBACTP,EADS,KACH4F,EADG,OAEQD,wBAAS5B,GAFjB,mBAETc,EAFS,KAEHK,EAFG,KAIVvC,EAAUC,cAYV7B,EAAM,uCAAG,sBAAAyC,EAAA,sEACP2B,GAAYpE,SADL,OAEb8E,OAAOC,SAASC,QAAO,GAFV,2CAAH,qDAKNC,EAAQC,YAAc,UACxBC,EAAclG,EAClB,GAAIgG,IAAUrD,EAAQmD,SAASK,MAAO,CACpC,IAAMC,EAAUJ,EAAMK,OAAOrG,KAAKsG,MAAM,KACxCJ,EAAc,IAAI3F,KAChBgG,SAASH,EAAQ,IACjBG,SAASH,EAAQ,IAAM,EACvBG,SAASH,EAAQ,KAIrB,IAAMI,EAAcN,IAAgBlG,EACpCmE,qBAAU,WACRyB,EAAQM,KACP,CAACM,IAEJ,IAAMvG,EAAa,SAACK,GAClBsF,EAAQtF,IAGV,IAAKuE,IAASlC,EAAQmD,SAASK,MAAO,CAKpCxD,EAAQd,KAJS,CACf4E,SAAU,SACVN,MAAO,CAAEO,WAAW,KAKxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,KACvB,kBAACpB,GAAD,KACE,kBAAC,EAAD,CACExF,KAAMA,EACNC,WAAYA,EACZuB,gBAnDc,SAACS,GACvB,IAAM3B,EAAU,IAAIC,KAAKP,EAAKQ,cAAeR,EAAKS,WAAYwB,GAC9DhC,EAAWK,GAEX,IAAMwF,EAAW,CACfW,SAAU/C,GAA2BpD,GACrC6F,MAAO,CAAEU,cAAc,IAEzBlE,EAAQd,KAAKiE,IA4CL/E,OAAQA,MAId,kBAAC,IAAD,CAAO4F,OAAO,EAAMC,KAAK,UACvB,kBAACnB,GAAD,KACE,kBAAC,GAAD,CAAWP,QAASA,MAGxB,kBAAC,IAAD,CAAO0B,KAAK,UACV,kBAACpB,GAAD,KACE,kBAAC,GAAD,CAAaxF,KAAMkG,Q,iuBC/F7B,IAAMY,GAAcC,YAAH,KAoBiBvH,IAAOhB,kBAMjBgB,IAAOV,cAMbU,IAAOT,QAezBiI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACJ,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,GAAD,QAGJK,SAASC,eAAe,U","file":"static/js/main.ca1d3958.chunk.js","sourcesContent":["module.exports = {\n  borderColor: '#D0D0D0',\n  btnColor: '#ffffff',\n  primaryColor: '#e53935',\n  primaryHoverColor: '#ff6f60',\n  gradientColor: '#ff6f60',\n  gradient2Color: '#E1E2E1',\n  inactiveColor: '#E1E2E1',\n  navbarElemColor: 'rgba(255, 255, 255, 1)',\n  bgColor: '#EEEEEE',\n  editorBgColor: '#ffffff',\n  shadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)'\n}","import styled from 'styled-components'\nimport colors from '../../constants/colors'\n\nexport const SideWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const NavigationButton = styled.span.attrs(props => ({ \n  className: 'material-icons'\n}))`\n  border-radius: 25px;\n  padding: 0.6rem;\n  color: ${colors.navbarElemColor};\n\n  margin: 0.3rem;\n\n  -webkit-user-select: none; /* Safari */\n  -ms-user-select: none; /* IE 10+ and Edge */\n  user-select: none; /* Standard syntax */\n\n  &:hover {\n    background-color: ${colors.primaryHoverColor};\n    cursor: pointer;\n  }\n`\n\nexport const NavigationSpacer = styled(NavigationButton)`\n  visibility: hidden;\n`\n\nexport const NavigationBar = styled.div`\n  background-color: ${colors.primaryColor};\n  height: 5rem;\n\n  border-radius: 15px 15px 0 0;\n\n  flex-shrink: 0;\n\n  padding: 0 0.8em;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  box-shadow: ${colors.shadow};\n`","import React from 'react'\nimport styled from 'styled-components'\n\nimport { NavigationButton } from './shared/NavigationElements' \nimport colors from '../constants/colors'\n\nconst DateNavigatonStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  margin: 0 auto;\n`\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: baseline;\n  margin: 0 auto;\n\n  min-width: 15rem;\n`\n\nconst Month = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.5rem;\n`\n\nconst Year = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1rem;\n`\n\nconst DateNavigaton =  ({ date, changeDate }) => {\n  const changeMonth = (e, operation) => {\n    e.preventDefault()\n\n    const newDate = new Date(date.getFullYear(), date.getMonth() + operation, date.getDate())\n    \n    changeDate(newDate)\n  }\n\n  return (\n    <DateNavigatonStyled>\n      <NavigationButton onClick={e => changeMonth(e, -1)}>chevron_left</NavigationButton>\n      <DateWrapper>\n        <Month>{date.toLocaleString('default', { month: 'long' })}</Month>\n        <Year>{date.getFullYear()}</Year>\n      </DateWrapper>\n      <NavigationButton onClick={e => changeMonth(e, 1)}>chevron_right</NavigationButton>\n    </DateNavigatonStyled>\n  )\n}\n\nexport default DateNavigaton","import React from 'react'\n\nimport { NavigationButton, NavigationSpacer, NavigationBar, SideWrapper } from './shared/NavigationElements'\nimport DateNavigaton from './DateNavigation' \n\nconst CalendarBar = ({ date, changeDate, logout }) => {\n\n  const openSettings = (e) => {\n    e.preventDefault()\n\n    logout()\n  }\n\n  return (\n    <NavigationBar>\n      <SideWrapper>\n        <NavigationSpacer>settings</NavigationSpacer>\n      </SideWrapper>\n      <DateNavigaton date={date} changeDate={changeDate}/>\n      <SideWrapper>\n        <NavigationButton onClick={openSettings}>settings</NavigationButton>\n      </SideWrapper>\n    </NavigationBar>\n  )\n}\n\nexport default CalendarBar","import React from 'react'\nimport styled from 'styled-components'\nimport colors from '../constants/colors'\n\nconst Panel = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(auto, 1fr));\n  grid-template-rows: 1fr;\n  height: 1.9rem;\n\n  background-color: ${colors.bgColor};\n\n  box-shadow: ${colors.shadow};\n`\n\nconst DayOfWeek = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-top: 1px solid ${colors.borderColor};\n  border-right: ${props => props.last ? '0px' : '1px solid ' + colors.borderColor};\n  flex: 1;\n\n  font-size: 0.9rem;\n  font-weight: bold;\n`\n\nconst WeekPanel = () => (\n  <Panel>\n      <DayOfWeek>Sun</DayOfWeek>\n      <DayOfWeek>Mon</DayOfWeek>\n      <DayOfWeek>Tue</DayOfWeek>\n      <DayOfWeek>Wed</DayOfWeek>\n      <DayOfWeek>Thu</DayOfWeek>\n      <DayOfWeek>Fri</DayOfWeek>\n      <DayOfWeek last>Sat</DayOfWeek>\n  </Panel>\n)\n\nexport default WeekPanel","import React from 'react'\nimport styled from 'styled-components'\n\nimport colors from '../constants/colors'\n\nconst CalendarStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, minmax(auto, 1fr));\n  grid-template-rows: repeat(6, minmax(auto, 1fr));\n  flex: 1;\n\n  box-shadow: ${colors.shadow};\n`\n\nconst DayCell = styled.div`\n  padding: 0.7rem;\n  background-color: ${colors.btnColor};\n  border-top: 1px solid ${colors.borderColor};\n  border-right: ${props => props.last ? '0px' : '1px solid ' + colors.borderColor};\n\n  font-size: 0.8rem;\n\n  &:hover {\n    filter: brightness(96%);\n    cursor: pointer;\n  }\n`\n\nconst EmptyCell = styled(DayCell)`\n  background-color: ${colors.bgColor};\n\n  &:hover {\n    filter: brightness(100%);\n    cursor: auto;\n  }\n`\n\nconst Calendar = ({ date, goToJournalPage }) => {\n\n  const handleDayClick = (e, day) => {\n    e.preventDefault()\n    goToJournalPage(day)\n  }\n\n  const isToday = (day) => {\n    const now = new Date()\n    const selected = new Date(date.getFullYear(), date.getMonth(), day)\n\n    return (\n      now.getFullYear() === selected.getFullYear() &&\n      now.getMonth() === selected.getMonth() &&\n      now.getDate() === selected.getDate()\n    )\n\n  }\n\n  const generateCalendar = () => { \n    let calendar = []\n\n    const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay();\n    for (let i = 0; i < firstDay; i++)\n      calendar.push(<EmptyCell key={calendar.length}/>)\n\n    const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n    for (let day = 1; day <= daysInMonth; day++)\n      calendar.push(\n        <DayCell \n          key={calendar.length}\n          onClick={(e) => { handleDayClick(e, day); }}\n          last={(calendar.length + 1) % 7 === 0}\n        >\n          {isToday(day) ? <u>{day}</u> : day}\n        </DayCell>\n      )\n\n    while (calendar.length < 42)\n      calendar.push(\n        <EmptyCell \n          key={calendar.length}\n          last={(calendar.length + 1) % 7 === 0}\n        />\n      )\n    \n    return calendar\n  }\n\n  return (\n    <CalendarStyled>\n      {generateCalendar()}\n    </CalendarStyled>\n  )\n}\n\nexport default Calendar","import React from 'react'\n\nimport CalendarBar from '../components/CalendarBar'\nimport WeekPanel from '../components/WeekPanel'\nimport Calendar from '../components/Calendar'\n\nconst CalendarPage = ({ date, changeDate, goToJournalPage, logout }) => {\n  return (\n    <>\n    <CalendarBar date={date} changeDate={changeDate} logout={logout}/>\n    <WeekPanel />\n    <Calendar date={date} goToJournalPage={goToJournalPage} />\n    </>\n  )\n}\n\nexport default CalendarPage","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport styled from 'styled-components'\n\nimport { NavigationButton, NavigationSpacer, NavigationBar, SideWrapper } from './shared/NavigationElements'\nimport colors from '../constants/colors'\n\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: baseline;\n  margin: 0 1.8rem;\n\n  min-width: 179px;\n`\n\nconst Day = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.4rem;\n`\n\nconst Month = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1.7rem;\n  margin-right: 0.5rem;\n`\n\nconst Year = styled.span`\n  font-weight: bold;\n  color: ${colors.navbarElemColor};\n  font-size: 1rem;\n`\n\nconst JournalBar = ({ date, saveEntry }) => {\n  let history = useHistory()\n\n  const handleBack = (e) => {\n    e.preventDefault()\n    history.goBack()\n  }\n\n  return (\n    <NavigationBar>\n      <SideWrapper>\n        <NavigationButton onClick={handleBack}>arrow_back</NavigationButton>\n        <NavigationSpacer>settings</NavigationSpacer>\n        <NavigationSpacer>save</NavigationSpacer>\n      </SideWrapper>\n      <DateWrapper>\n        <Day>{date.getDate()}</Day>\n        <Month>{date.toLocaleString('default', { month: 'long' })}</Month>\n        <Year>{date.getFullYear()}</Year>\n      </DateWrapper>\n      <SideWrapper>\n        <NavigationSpacer>arrow_back</NavigationSpacer>\n        <NavigationButton onClick={saveEntry}>save</NavigationButton>\n        <NavigationButton>settings</NavigationButton>\n      </SideWrapper>\n    </NavigationBar>\n  )\n}\n\nexport default JournalBar","import React from 'react'\nimport ReactQuill from 'react-quill';\nimport styled from 'styled-components'\n\nimport 'react-quill/dist/quill.snow.css'\n\nconst EditorStyled = styled.div`\n  font-size: 1rem;\n  flex-grow: 1;\n\n  overflow: auto;\n`\n\nconst modules = {\n  syntax: true,\n  toolbar: [\n    [{ 'header': [1, 2, 3, false] }],\n    ['bold', 'italic', 'underline','strike', 'blockquote'],\n    [{'list': 'ordered'}, {'list': 'bullet'}, {'indent': '-1'}, {'indent': '+1'}],\n    ['link', 'image'],\n    ['code-block'],\n    ['clean']\n  ],\n}\n\nconst formats = [\n  'header',\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\n  'list', 'bullet', 'indent',\n  'link', 'image',\n  'code-block'\n]\n\nconst Editor = ({ text }) => {\n  return (\n    <ReactQuill theme=\"snow\" ref={text} modules={modules} formats={formats}>\n      <EditorStyled/>\n    </ReactQuill>\n  )\n}\n\nexport default Editor","const genEntryLink = date => {\n  return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`\n}\n\nexport default { genEntryLink }","import axios from 'axios'\n\nimport linkGenerator from '../utils/linkGenerator'\n\nconst baseUrl = '/entries'\n\nconst get = async (date) => {\n  const url = `${baseUrl}/${linkGenerator.genEntryLink(date)}`\n  const response = await axios.get(url)\n  return response.data ? response.data.entry : undefined\n}\n\nconst post = async (date, entry) => {\n  const url = `${baseUrl}/${linkGenerator.genEntryLink(date)}`\n  const response = await axios.post(url, { entry })\n  return response.data.entry\n}\n\nexport default { get, post }","import React, { useEffect, useRef } from 'react'\n\nimport JournalBar from '../components/JournalBar'\nimport Editor from '../components/Editor'\n\nimport entryService from '../services/entries'\n\nconst JournalPage = ({ date }) => {\n  const text = useRef() \n\n  useEffect(() => {\n    (async () => {\n      try {\n        const loadedEntry = await entryService.get(date)\n        if (loadedEntry !== undefined)\n          text.current.getEditor().setContents(loadedEntry)\n      } catch(exception) {\n        console.error(exception)\n      }\n    })()\n  }, [date])\n\n  const saveEntry = async () => {\n    try {\n      await entryService.post(date, text.current.getEditor().getContents())\n    } catch(exception) {\n      console.error(exception)\n    }\n  }\n\n  return (\n    <>\n    <JournalBar date={date} saveEntry={saveEntry}/>\n    <Editor text={text}/>\n    </>\n  )\n}\n\nexport default JournalPage","import axios from 'axios'\n\nconst baseUrl = '/auth'\n\nconst login = async () => {\n  const user = await axios.get(`${baseUrl}/google`)\n  return user\n}\n\nconst logout = async () => {\n  return await axios.get(`${baseUrl}/logout`)\n}\n\nexport default { login, logout }","import React from 'react'\nimport styled from 'styled-components'\n\nimport  '../components/googleBtn.css'\nimport colors from '../constants/colors'\nimport userService from '../services/user'\n\nconst LoginForm = styled.div`\n  width: 300px;\n  height: 220px;\n  background-color: #ffffff;\n  box-shadow: ${colors.shadow};\n  border-radius: 5px;\n\n  padding: 40px;\n`\n\nconst SignInText = styled.p`\n  margin: 0 auto 50px;\n  font-size: 24px;\n  font-weight: 400;\n  width: max-content;\n`\n\nconst LoginPage = ({ setUser }) => {\n\n  const login = async (e) => {\n    e.preventDefault()\n\n    const user = await userService.login()\n\n    setUser({ token: user.token, name: user.name })\n  }\n\n  return (\n    <LoginForm>\n      <SignInText>Sign in</SignInText>\n      <div className=\"google-btn\" onClick={login}>\n        <div className=\"google-icon-wrapper\">\n          <img className=\"google-icon\" alt=\"google-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\n        </div>\n        <p className=\"btn-text\"><b>Sign in with google</b></p>\n      </div>\n    </LoginForm>\n  )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nimport {\n  Switch, Route, useHistory, useRouteMatch, Redirect\n} from 'react-router-dom'\n\nimport CalendarPage from './pages/CalendarPage'\nimport JournalPage from './pages/JournalPage' \nimport LoginPage from './pages/LoginPage'\n\nimport linkGenerator from './utils/linkGenerator'\nimport userService from './services/user'\n\nimport colors from './constants/colors'\n\nconst PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  padding: 3% 21%;\n  background: linear-gradient(to bottom, ${colors.gradientColor} 0%, ${colors.gradientColor} 13%, ${colors.gradientColor} 13%, ${colors.gradient2Color} 13%, ${colors.gradient2Color} 100%);\n`\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  padding-top: 8%; \n  background: linear-gradient(to bottom, ${colors.gradientColor} 0%, ${colors.gradientColor} 23%, ${colors.gradientColor} 23%, ${colors.gradient2Color} 23%, ${colors.gradient2Color} 100%);\n`\n\nconst App = () => {\n  const [date, setDate] = useState(new Date())\n  const [user, setUser] = useState(undefined)\n\n  const history = useHistory()\n  const goToJournalPage = (day) => {\n    const newDate = new Date(date.getFullYear(), date.getMonth(), day)\n    changeDate(newDate)\n\n    const location = {\n      pathname: linkGenerator.genEntryLink(newDate),\n      state: { fromCalendar: true }\n    }\n    history.push(location)\n  }\n\n  const logout = async () => {\n    await userService.logout()\n    window.location.reload(true)\n  }\n\n  const match = useRouteMatch('/:date')\n  let journalDate = date\n  if (match && !history.location.state) {\n    const dateRaw = match.params.date.split('-')\n    journalDate = new Date(\n      parseInt(dateRaw[0]),\n      parseInt(dateRaw[1]) - 1,\n      parseInt(dateRaw[2])\n    )\n  }\n\n  const isUpdatable = journalDate !== date\n  useEffect(() => {\n    setDate(journalDate)\n  }, [isUpdatable])\n\n  const changeDate = (newDate) => {\n    setDate(newDate)\n  }\n\n  if (!user && !history.location.state) {\n    const location = {\n      pathname: '/login',\n      state: { loginPage: true }\n    }\n    history.push(location)\n  }\n\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <PageWrapper>\n          <CalendarPage \n            date={date} \n            changeDate={changeDate}\n            goToJournalPage={goToJournalPage}\n            logout={logout}\n          />\n        </PageWrapper>\n      </Route>\n      <Route exact={true} path=\"/login\">\n        <LoginWrapper>\n          <LoginPage setUser={setUser}/>\n        </LoginWrapper>\n      </Route>\n      <Route path=\"/:date\">\n        <PageWrapper>\n          <JournalPage date={journalDate}/>\n        </PageWrapper>\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport colors from './constants/colors'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100vh;\n    width: 100vw;\n  }\n\n  html {\n    font-family: 'Roboto', sans-serif;\n  }\n\n  strong {\n    font-weight: 700;\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  u {\n    text-decoration: none;\n    border-bottom: 0.3rem solid ${colors.primaryHoverColor};\n\n    padding-bottom: 0.1rem;\n  }\n\n  .quill {\n    background-color: ${colors.editorBgColor};\n    flex-grow: 1;\n    \n    display: flex;\n    flex-direction: column;\n\n    box-shadow: ${colors.shadow};\n  }\n\n  .ql-toolbar, .ql-container {\n    border-left: 0px !important;\n    border-right: 0px !important;\n    font-family: Roboto !important;\n  }\n\n  #root {\n    width: 100%;\n    height: 100%;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}